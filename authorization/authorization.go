// Code generated by goctl. DO NOT EDIT.
// Source: authorization.proto

package authorization

import (
	"context"

	"github.com/xh-polaris/meowchat-authorization-rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AllowReq  = pb.AllowReq
	AllowResp = pb.AllowResp

	Authorization interface {
		Allow(ctx context.Context, in *AllowReq, opts ...grpc.CallOption) (*AllowResp, error)
	}

	defaultAuthorization struct {
		cli zrpc.Client
	}
)

func NewAuthorization(cli zrpc.Client) Authorization {
	return &defaultAuthorization{
		cli: cli,
	}
}

func (m *defaultAuthorization) Allow(ctx context.Context, in *AllowReq, opts ...grpc.CallOption) (*AllowResp, error) {
	client := pb.NewAuthorizationClient(m.cli.Conn())
	return client.Allow(ctx, in, opts...)
}
